<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.renly.HW.EmployeeMapper">
	<!-- 
		namespace:名称空间;指定为接口的全类名
		id：唯一标识
		resultType：返回值类型
		#{id}：从传递过来的参数中取出id值
	 -->
	<select id="getEmpById" resultType="employee" databaseId="mysql">
		SELECT ID, last_name, email, gender FROM mybatis_employee where id = #{id}
	</select>
	
	<!-- parameterType：参数类型，可以省略， 
		获取自增主键的值：
		mysql支持自增主键，自增主键值的获取，mybatis也是利用statement.getGenreatedKeys()；
		useGeneratedKeys="true"；使用自增主键获取主键值策略
		keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
	-->
	<insert id="addEmp" parameterType="com.renly.bean.Employee"
		useGeneratedKeys="true" keyProperty="id">
		insert into mybatis_employee(last_name,email,gender) 
		values(#{lastName},#{email},#{gender})
	</insert>
	
	<delete id="delEmpById">
		delete from mybatis_employee where id=#{id}
	</delete>
	
	
	<update id="updateEmp">
		update mybatis_employee 
		set last_name=#{lastName},email=#{email},gender=#{gender}
		where id=#{id}
	</update>
	
	<select id="getEmpByIdAndLastName" resultType="com.renly.bean.Employee">
 		select * from mybatis_employee where id = #{param1} and last_name=#{param2}
 	</select>
	
 	<select id="getEmpByMap" resultType="com.renly.bean.Employee">
 		select * from mybatis_employee where id=#{id} and last_name=#{lastName}
 	</select>
	
</mapper>